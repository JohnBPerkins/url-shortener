name: CI Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest


  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Install Go tools
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Install protoc & plugins
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Generate gRPC code
      run: |
        mkdir -p gen
        protoc \
          --proto_path=proto \
          --go_out=paths=source_relative:gen \
          --go-grpc_out=paths=source_relative:gen \
          proto/shortener.proto

    - name: Run unit tests
      run: |
        golangci-lint run
        go test ./service -short

    - name: Build Docker image
      run: |
        docker-compose build

    - name: Bring up Docker Compose services
      run: |
        docker-compose up -d

    - name: Wait for Postgres to be healthy
      run: |
        for i in {1..30}; do
          docker exec $(docker ps -qf "name=url-shortener_db") pg_isready -U shortener && break
          sleep 2
        done

    - name: Run integration tests
      env:
        DATABASE_DSN: postgres://shortener:password123@localhost:5432/shortener?sslmode=disable
        REDIS_ENDPOINT: localhost:6379
      run: |
        go test ./service -tags=integration --timeout 5m

    - name: Tear down Docker Compose
      run: |
        docker-compose down --volumes

    # - name: Upload Docker image
    #   run: |
